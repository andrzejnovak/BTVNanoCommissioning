runpu:
    process:
        process_type: 'interpolated-script-cmd'
        interpreter: bash
        script: |
            cd {workingdir}
            pwd -LP
            ls 
            python createNTrueForPU.py --samples datasets/{inputFile}.json --year {year} --outputDir {workingdir} --outputName {outputFile} 
            ls 
    environment: 
        environment_type: 'docker-encapsulated'
        #image: coffeateam/coffea-base
        image: gitlab-registry.cern.ch/algomez/btvnanocommissioning
        imagetag: latest
        resources:
            - voms_proxy: true
    publisher:
        publisher_type: interpolated-pub
        publish:
            outputCoffea: '{workingdir}/{outputFile}'

runcode:
    process:
        process_type: 'interpolated-script-cmd'
        interpreter: bash
        script: |
            cd {workingdir}
            pwd -LP
            ls 
            python simplerunner.py --workflow fattag --executor iterative --samples datasets/{inputFile}.json --output {dataset}.coffea7 --year {year} --nTrueFile {nTrueFile} --outputDir {workingdir}/histograms/ --dataset {dataset} --limit 2
            ls 
    environment: 
        environment_type: 'docker-encapsulated'
        image: gitlab-registry.cern.ch/algomez/btvnanocommissioning
        #image: coffeateam/coffea-base
        imagetag: latest
        resources:
            - voms_proxy: true
    publisher:
        publisher_type: interpolated-pub
        glob: true
        publish:
            output_files: '{workingdir}/histograms/*coffea7'

makeplots:
    process:
        process_type: 'interpolated-script-cmd'
        interpreter: bash
        script: |
            cd {workingdir}
            pwd -LP
            ls 
            python make_plots_simple.py -i {workingdir}/histograms/ --outputDir {workingdir}/plots/ -d --year {year} --selection msd100tau06
            ls 
    environment: 
        environment_type: 'docker-encapsulated'
        image: gitlab-registry.cern.ch/algomez/btvnanocommissioning
        imagetag: latest
    publisher:
        publisher_type: interpolated-pub
        publish:
            plots: '{workingdir}/plots/*png'

createpickle:
    process:
        process_type: 'interpolated-script-cmd'
        interpreter: bash
        script: |
            cd {workingdir}
            pwd -LP
            ls 
            python coffeaToPickle.py -i {workingdir}/histograms/ --year {year} --outputDir {workingdir}/pickleFiles/ -o {outputfile}
            ls 
    environment: 
        environment_type: 'docker-encapsulated'
        image: gitlab-registry.cern.ch/algomez/btvnanocommissioning
        imagetag: latest
    publisher:
        publisher_type: interpolated-pub
        publish:
            picklefile: '{workingdir}/pickleFiles/{outputfile}'

runcombine:
    process:
        process_type: 'interpolated-script-cmd'
        interpreter: bash
        script: |
            cd {workingdir}
            pwd -LP
            ls 
            pip install flake8 --user
            pip install --user https://github.com/nsmith-/rhalphalib/archive/master.zip
            python scaleFactorComputation.py --year {year} --tpf {inputFile} --selection msd100tau06DDB --outputDir {workingdir}/fitdir/
            cd {workingdir}/fitdir/
            combineCards.py sfpass=sfpass.txt sffail=sffail.txt > sfModel_combined.txt
            text2workspace.py sfModel_combined.txt
            combine -M FitDiagnostics --expectSignal 1 -d sfModel_combined.root --cminDefaultMinimizerStrategy 0 --robustFit=1 --saveShapes  --rMin 0.5 --rMax 1.5
            ls 
    environment: 
        environment_type: 'docker-encapsulated'
        image: gitlab-registry.cern.ch/algomez/btvnanocommissioning
        imagetag: combine
    publisher:
        publisher_type: interpolated-pub
        publish:
            fitdir: '{workingdir}/fitdir/*'
